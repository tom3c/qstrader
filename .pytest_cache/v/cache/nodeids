[
  "tests/integration/portcon/test_pcm_e2e.py::test_pcm_fixed_weight_optimiser_fixed_alpha_weights_call_end_to_end",
  "tests/integration/trading/test_backtest_e2e.py::test_backtest_long_short_leveraged",
  "tests/integration/trading/test_backtest_e2e.py::test_backtest_sixty_forty",
  "tests/unit/alpha_model/test_fixed_signals.py::test_fixed_signals_alpha_model[signals0]",
  "tests/unit/alpha_model/test_fixed_signals.py::test_fixed_signals_alpha_model[signals1]",
  "tests/unit/alpha_model/test_single_signal.py::test_single_signal_alpha_model[-0.25-expected_signals1]",
  "tests/unit/alpha_model/test_single_signal.py::test_single_signal_alpha_model[0.75-expected_signals0]",
  "tests/unit/asset/test_cash.py::test_cash[EUR-EUR]",
  "tests/unit/asset/test_cash.py::test_cash[GBP-GBP]",
  "tests/unit/asset/test_cash.py::test_cash[USD-USD]",
  "tests/unit/asset/universe/test_dynamic_universe.py::test_dynamic_universe[asset_dates0-dt0-expected0]",
  "tests/unit/asset/universe/test_dynamic_universe.py::test_dynamic_universe[asset_dates1-dt1-expected1]",
  "tests/unit/asset/universe/test_dynamic_universe.py::test_dynamic_universe[asset_dates2-dt2-expected2]",
  "tests/unit/asset/universe/test_dynamic_universe.py::test_dynamic_universe[asset_dates3-dt3-expected3]",
  "tests/unit/asset/universe/test_static_universe.py::test_static_universe[assets0-dt0-expected0]",
  "tests/unit/asset/universe/test_static_universe.py::test_static_universe[assets1-dt1-expected1]",
  "tests/unit/broker/fee_model/test_percent_fee_model.py::test_percent_commission[0.0-0.0-100-1000.0-0.0-0.0-0.0]",
  "tests/unit/broker/fee_model/test_percent_fee_model.py::test_percent_commission[0.0-0.005-100-1000.0-0.0-5.0-5.0]",
  "tests/unit/broker/fee_model/test_percent_fee_model.py::test_percent_commission[0.001-0.005--100--1000.0-1.0-5.0-6.0]",
  "tests/unit/broker/fee_model/test_percent_fee_model.py::test_percent_commission[0.001-0.005-100-1000.0-1.0-5.0-6.0]",
  "tests/unit/broker/fee_model/test_percent_fee_model.py::test_percent_commission[0.002-0.0-100-1000.0-2.0-0.0-2.0]",
  "tests/unit/broker/fee_model/test_percent_fee_model.py::test_percent_commission[0.002-0.0025--50--8542.0-17.084-21.355-38.439]",
  "tests/unit/broker/fee_model/test_zero_fee_model.py::test_commission_is_zero_uniformly",
  "tests/unit/broker/portfolio/test_portfolio.py::test_history_to_df_empty",
  "tests/unit/broker/portfolio/test_portfolio.py::test_initial_settings_for_default_portfolio",
  "tests/unit/broker/portfolio/test_portfolio.py::test_portfolio_currency_settings",
  "tests/unit/broker/portfolio/test_portfolio.py::test_portfolio_to_dict_empty_portfolio",
  "tests/unit/broker/portfolio/test_portfolio.py::test_portfolio_to_dict_for_two_holdings",
  "tests/unit/broker/portfolio/test_portfolio.py::test_subscribe_funds_behaviour",
  "tests/unit/broker/portfolio/test_portfolio.py::test_transact_asset_behaviour",
  "tests/unit/broker/portfolio/test_portfolio.py::test_update_market_value_of_asset_earlier_date",
  "tests/unit/broker/portfolio/test_portfolio.py::test_update_market_value_of_asset_negative_price",
  "tests/unit/broker/portfolio/test_portfolio.py::test_update_market_value_of_asset_not_in_list",
  "tests/unit/broker/portfolio/test_portfolio.py::test_withdraw_funds_behaviour",
  "tests/unit/broker/portfolio/test_position.py::test_basic_long_equities_position",
  "tests/unit/broker/portfolio/test_position.py::test_basic_short_equities_position",
  "tests/unit/broker/portfolio/test_position.py::test_position_long_and_short",
  "tests/unit/broker/portfolio/test_position.py::test_position_long_close",
  "tests/unit/broker/portfolio/test_position.py::test_position_long_short_long_short_ending_long",
  "tests/unit/broker/portfolio/test_position.py::test_position_long_twice",
  "tests/unit/broker/portfolio/test_position.py::test_position_short_and_long",
  "tests/unit/broker/portfolio/test_position.py::test_position_short_close",
  "tests/unit/broker/portfolio/test_position.py::test_position_short_long_short_long_ending_short",
  "tests/unit/broker/portfolio/test_position.py::test_position_short_twice",
  "tests/unit/broker/portfolio/test_position.py::test_transact_for_incorrect_asset",
  "tests/unit/broker/portfolio/test_position_handler.py::test_total_values_for_no_transactions",
  "tests/unit/broker/portfolio/test_position_handler.py::test_total_values_for_two_separate_transactions",
  "tests/unit/broker/portfolio/test_position_handler.py::test_transact_position_current_position",
  "tests/unit/broker/portfolio/test_position_handler.py::test_transact_position_new_position",
  "tests/unit/broker/portfolio/test_position_handler.py::test_transact_position_quantity_zero",
  "tests/unit/broker/test_simulated_broker.py::test_all_cases_of_set_broker_commission",
  "tests/unit/broker/test_simulated_broker.py::test_bad_set_base_currency",
  "tests/unit/broker/test_simulated_broker.py::test_bad_set_initial_funds",
  "tests/unit/broker/test_simulated_broker.py::test_create_portfolio",
  "tests/unit/broker/test_simulated_broker.py::test_get_account_cash_balance",
  "tests/unit/broker/test_simulated_broker.py::test_get_account_total_market_value",
  "tests/unit/broker/test_simulated_broker.py::test_get_portfolio_cash_balance",
  "tests/unit/broker/test_simulated_broker.py::test_get_portfolio_total_market_value",
  "tests/unit/broker/test_simulated_broker.py::test_good_set_base_currency",
  "tests/unit/broker/test_simulated_broker.py::test_good_set_initial_funds",
  "tests/unit/broker/test_simulated_broker.py::test_initial_settings_for_default_simulated_broker",
  "tests/unit/broker/test_simulated_broker.py::test_list_all_portfolio",
  "tests/unit/broker/test_simulated_broker.py::test_set_cash_balances",
  "tests/unit/broker/test_simulated_broker.py::test_set_initial_open_orders",
  "tests/unit/broker/test_simulated_broker.py::test_set_initial_portfolios",
  "tests/unit/broker/test_simulated_broker.py::test_submit_order",
  "tests/unit/broker/test_simulated_broker.py::test_subscribe_funds_to_account",
  "tests/unit/broker/test_simulated_broker.py::test_subscribe_funds_to_portfolio",
  "tests/unit/broker/test_simulated_broker.py::test_update_sets_correct_time",
  "tests/unit/broker/test_simulated_broker.py::test_withdraw_funds_from_account",
  "tests/unit/broker/test_simulated_broker.py::test_withdraw_funds_from_portfolio",
  "tests/unit/broker/transaction/test_transaction.py::test_transaction_representation",
  "tests/unit/portcon/optimiser/test_equal_weight.py::test_fixed_weight_optimiser[1.0-initial_weights0-expected_weights0]",
  "tests/unit/portcon/optimiser/test_equal_weight.py::test_fixed_weight_optimiser[2.0-initial_weights1-expected_weights1]",
  "tests/unit/portcon/optimiser/test_fixed_weight.py::test_fixed_weight_optimiser[initial_weights0-expected_weights0]",
  "tests/unit/portcon/optimiser/test_fixed_weight.py::test_fixed_weight_optimiser[initial_weights1-expected_weights1]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_call[1000000.0-0.05-weights0-asset_prices0-expected0]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_call[325000.0-0.15-weights1-asset_prices1-expected1]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_call[687523.0-0.025-weights2-asset_prices2-expected2]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_check_set_cash_buffer[-1.0-None]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_check_set_cash_buffer[0.0-0.0]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_check_set_cash_buffer[0.5-0.5]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_check_set_cash_buffer[0.99-0.99]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_check_set_cash_buffer[1.0-1.0]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_check_set_cash_buffer[1.5-None]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_normalise_weights[weights0-expected0]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_normalise_weights[weights1-expected1]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_normalise_weights[weights2-expected2]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_normalise_weights[weights3-expected3]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_normalise_weights[weights4-expected4]",
  "tests/unit/portcon/order_sizer/test_dollar_weighted.py::test_normalise_weights[weights5-None]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_call[1000000.0-1.0-weights0-asset_prices0-expected0]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_call[325000.0-1.5-weights1-asset_prices1-expected1]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_call[687523.0-2.0-weights2-asset_prices2-expected2]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_call[687523.0-2.0-weights3-asset_prices3-expected3]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_check_set_gross_leverage[-1.0-None]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_check_set_gross_leverage[0.0-None]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_check_set_gross_leverage[0.01-0.01]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_check_set_gross_leverage[0.99-0.99]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_check_set_gross_leverage[1.0-1.0]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_check_set_gross_leverage[2.0-2.0]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_check_set_gross_leverage[5.0-5.0]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights0-1.0-expected0]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights1-1.0-expected1]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights10-3.0-expected10]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights2-1.0-expected2]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights3-2.0-expected3]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights4-0.5-expected4]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights5-1.0-expected5]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights6-3.0-expected6]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights7-1.0-expected7]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights8-1.0-expected8]",
  "tests/unit/portcon/order_sizer/test_long_short.py::test_normalise_weights[weights9-2.0-expected9]",
  "tests/unit/portcon/test_pcm.py::test_create_full_asset_weight_vector[empty weights on both sides-zero_weights0-optimised_weights0-expected0]",
  "tests/unit/portcon/test_pcm.py::test_create_full_asset_weight_vector[fully-intersecting weights-zero_weights3-optimised_weights3-expected3]",
  "tests/unit/portcon/test_pcm.py::test_create_full_asset_weight_vector[non-intersecting weights-zero_weights1-optimised_weights1-expected1]",
  "tests/unit/portcon/test_pcm.py::test_create_full_asset_weight_vector[partially-intersecting weights-zero_weights2-optimised_weights2-expected2]",
  "tests/unit/portcon/test_pcm.py::test_create_zero_target_weight_vector[empty assets-full_assets0-expected0]",
  "tests/unit/portcon/test_pcm.py::test_create_zero_target_weight_vector[non-empty assets-full_assets1-expected1]",
  "tests/unit/portcon/test_pcm.py::test_generate_rebalance_orders[empty portfolios on both sides-target_portfolio0-current_portfolio0-expected0]",
  "tests/unit/portcon/test_pcm.py::test_generate_rebalance_orders[empty target portfolio with non-empty current portfolio-target_portfolio3-current_portfolio3-expected3]",
  "tests/unit/portcon/test_pcm.py::test_generate_rebalance_orders[non-empty equal portfolios on both sides - no orders-target_portfolio1-current_portfolio1-expected1]",
  "tests/unit/portcon/test_pcm.py::test_generate_rebalance_orders[non-empty portfolios, fully-intersecting symbols-target_portfolio6-current_portfolio6-expected6]",
  "tests/unit/portcon/test_pcm.py::test_generate_rebalance_orders[non-empty portfolios, non-intersecting symbols-target_portfolio4-current_portfolio4-expected4]",
  "tests/unit/portcon/test_pcm.py::test_generate_rebalance_orders[non-empty portfolios, partially-intersecting symbols-target_portfolio5-current_portfolio5-expected5]",
  "tests/unit/portcon/test_pcm.py::test_generate_rebalance_orders[non-empty target portfolio with empty current portfolio-target_portfolio2-current_portfolio2-expected2]",
  "tests/unit/portcon/test_pcm.py::test_obtain_full_asset_list[empty on both sides-port_dict0-uni_assets0-expected0]",
  "tests/unit/portcon/test_pcm.py::test_obtain_full_asset_list[non-intersecting set of assets-port_dict2-uni_assets2-expected2]",
  "tests/unit/portcon/test_pcm.py::test_obtain_full_asset_list[partially intersecting set of assets-port_dict1-uni_assets1-expected1]",
  "tests/unit/signals/test_momentum.py::test_momentum_signal[start_dt0-lookbacks0-prices0-expected0]",
  "tests/unit/signals/test_sma.py::test_sma_signal[start_dt0-lookbacks0-prices0-expected0]",
  "tests/unit/simulation/test_daily_bday.py::test_daily_rebalance[2020-01-01-2020-01-07-False-False-expected_events1]",
  "tests/unit/simulation/test_daily_bday.py::test_daily_rebalance[2020-01-01-2020-01-07-True-True-expected_events0]",
  "tests/unit/simulation/test_event.py::test_sim_event_eq[sim_event_params0-compare_event_params0-True]",
  "tests/unit/simulation/test_event.py::test_sim_event_eq[sim_event_params1-compare_event_params1-False]",
  "tests/unit/simulation/test_event.py::test_sim_event_eq[sim_event_params2-compare_event_params2-False]",
  "tests/unit/simulation/test_event.py::test_sim_event_eq[sim_event_params3-compare_event_params3-False]",
  "tests/unit/system/rebalance/test_buy_and_hold_rebalance.py::test_buy_and_hold_rebalance[2020-01-01]",
  "tests/unit/system/rebalance/test_buy_and_hold_rebalance.py::test_buy_and_hold_rebalance[2020-02-02]",
  "tests/unit/system/rebalance/test_daily_rebalance.py::test_daily_rebalance[2019-12-26-2020-01-07-True-expected_dates1-14:30:00]",
  "tests/unit/system/rebalance/test_daily_rebalance.py::test_daily_rebalance[2020-03-11-2020-03-17-False-expected_dates0-21:00:00]",
  "tests/unit/system/rebalance/test_end_of_month_rebalance.py::test_monthly_rebalance[2019-12-26-2020-09-01-True-expected_dates1-14:30:00]",
  "tests/unit/system/rebalance/test_end_of_month_rebalance.py::test_monthly_rebalance[2020-03-11-2020-12-31-False-expected_dates0-21:00:00]",
  "tests/unit/system/rebalance/test_weekly_rebalance.py::test_check_weekday_raises_value_error",
  "tests/unit/system/rebalance/test_weekly_rebalance.py::test_weekly_rebalance[2019-12-26-2020-02-07-WED-True-expected_dates1-14:30:00]",
  "tests/unit/system/rebalance/test_weekly_rebalance.py::test_weekly_rebalance[2020-03-11-2020-05-17-MON-False-expected_dates0-21:00:00]",
  "tests/unit/utils/test_console.py::test_string_colour[blue colour-4-\\x1b[1;34mblue colour\\x1b[0m]",
  "tests/unit/utils/test_console.py::test_string_colour[cyan colour-6-\\x1b[1;36mcyan colour\\x1b[0m]",
  "tests/unit/utils/test_console.py::test_string_colour[green colour-2-\\x1b[1;32mgreen colour\\x1b[0m]"
]